version: '3.5'

networks:
  main:
    name: tbd-minitwit
  elastic:

volumes:
  elk_elasticsearch_data:

services:


  frontend:
    container_name: react_frontend
    build: 
      context: ./frontend
      dockerfile: Dockerfile.dev
    ports:
      - 3000:3000
    command: serve -s build -l 3000
    depends_on:
      - backend
    restart: on-failure
    networks:
      - main


  db:
    image: postgres:14.2
    ports:
      - 5433:5432
    environment:
      - POSTGRES_USER=sa
      - POSTGRES_PASSWORD_FILE=/run/secrets/db_password
      - POSTGRES_DB=Minitwit
    secrets:
      - db_password
    volumes:
      - /var/lib/docker/volume/data:/var/lib/postgresql/data
    networks:
      - main


  prometheus:
    image: prom/prometheus:v2.33.5
    container_name: prometheus
    ports: 
      - 9090:9090
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    networks:
      - main
  
  grafana:
    image: grafana/grafana
    container_name: grafana
    ports:
      - 3001:3000
    networks:
      - main


  backend:
    container_name: dotnet_backend
    build:
      context: ./backend/MinitwitReact
      dockerfile: Dockerfile.dev
    ports:
      - 5229:80
    environment:
      ConnectionStrings__Minitwit:
    depends_on:
      - db
      - prometheus
      - grafana
    secrets:
      - source: connection_string
        target: ConnectionStrings__Minitwit
      - source: jwt_key
        target: AppSettings__Secret
    restart: on-failure

    networks: 
      - main
    
  elasticsearch:
    image: "docker.elastic.co/elasticsearch/elasticsearch:7.17.1"
    environment:
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - "discovery.type=single-node"
    volumes:
      - elk_elasticsearch_data:/usr/share/elasticsearch/data
    networks:
      - elastic
    
  kibana:
    image: "docker.elastic.co/kibana/kibana:7.17.1"
    environment:
      elasticsearch.hosts: '["http://elasticsearch:9200"]'
    networks:
      - elastic
  
  filebeat:
    image: "docker.elastic.co/beats/filebeat:7.17.1"
    environment:
      - "ELK_USER=${ELK_USER}"
    user: root
    volumes:
      - ${ELK_DIR}/filebeat.yml:/usr/share/filebeat/filebeat.yml:ro
      - /var/lib/docker:/var/lib/docker:ro
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - elastic
       
  nginx:
    image: nginx
    ports:
      - 9200:9200
      - 5601:5601
      - 8881:8881
      - 8882:8882
    networks:
      - elastic
    volumes:
      - type: bind
        source: ${ELK_DIR}/nginx.conf
        target: /etc/nginx/nginx.conf
      - type: bind
        source: ${ELK_DIR}/.htpasswd
        target: /etc/nginx/.htpasswd

secrets:
  db_password:
    file: .local/db_password.txt
  connection_string:
    file: .local/connection_string.txt
  jwt_key:
    file: .local/jwt_key.txt
  
