<Project Sdk="Microsoft.NET.Sdk.Web">

    <PropertyGroup>
        <TargetFramework>net6.0</TargetFramework>
        <Nullable>enable</Nullable>
        <!--<TypeScriptCompileBlocked>true</TypeScriptCompileBlocked>-->
        <!--<TypeScriptToolsVersion>Latest</TypeScriptToolsVersion>-->
        <IsPackable>false</IsPackable>
        <!--<SpaRoot>../frontend\</SpaRoot>-->
        <!--<DefaultItemExcludes>$(DefaultItemExcludes);$(SpaRoot)node_modules\**</DefaultItemExcludes>-->
        <!--<SpaProxyServerUrl>https://localhost:44455</SpaProxyServerUrl>-->
        <!--<SpaProxyLaunchCommand>npm start</SpaProxyLaunchCommand>-->
        <ImplicitUsings>enable</ImplicitUsings>
        <!--<DockerDefaultTargetOS>Linux</DockerDefaultTargetOS>-->
      <UserSecretsId>b5168a6e-7bff-42eb-ac95-0ad137a5e7c1</UserSecretsId>
  </PropertyGroup>

    <ItemGroup>
        <!--<PackageReference Include="Microsoft.AspNetCore.SpaProxy" Version="6.0.1" />-->
        <PackageReference Include="Microsoft.Data.Sqlite" Version="6.0.2" />
        <PackageReference Include="Microsoft.Data.Sqlite.Core" Version="6.0.2" />
        <PackageReference Include="Microsoft.EntityFrameworkCore.Design" Version="6.0.2">
          <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
          <PrivateAssets>all</PrivateAssets>
        </PackageReference>
        <PackageReference Include="Microsoft.EntityFrameworkCore.Sqlite" Version="6.0.2" />
        <PackageReference Include="Microsoft.EntityFrameworkCore.SqlServer" Version="6.0.2" />
        <PackageReference Include="Npgsql.EntityFrameworkCore.PostgreSQL" Version="6.0.3" />

    </ItemGroup>

    <!--<ItemGroup>-->
        <!--[> Don't publish the SPA source files, but do show them in the project files list <]-->
        <!--<Content Remove="$(SpaRoot)**" />-->
        <!--<None Remove="$(SpaRoot)**" />-->
        <!--<None Include="$(SpaRoot)**" Exclude="$(SpaRoot)node_modules\**" />-->
    <!--</ItemGroup>-->

    <ItemGroup>
      <Folder Include="Simulator" />
    </ItemGroup>


    <!--<Target Name="DebugEnsureNodeEnv" BeforeTargets="Build" Condition=" '$(Configuration)' == 'Debug' And !Exists('$(SpaRoot)node_modules') ">
        &lt;!&ndash; Ensure Node.js is installed &ndash;&gt;
        <Exec Command="node &#45;&#45;version" ContinueOnError="true">
            <Output TaskParameter="ExitCode" PropertyName="ErrorCode" />
        </Exec>
        <Error Condition="'$(ErrorCode)' != '0'" Text="Node.js is required to build and run this project. To continue, please install Node.js from https://nodejs.org/, and then restart your command prompt or IDE." />
        <Message Importance="high" Text="Restoring dependencies using 'npm'. This may take several minutes..." />
        <Exec WorkingDirectory="$(SpaRoot)" Command="npm install" />
    </Target>-->

    <!--<Target Name="PublishRunWebpack" AfterTargets="ComputeFilesToPublish">-->
        <!--[> As part of publishing, ensure the JS resources are freshly built in production mode <]-->
        <!--<Exec WorkingDirectory="$(SpaRoot)" Command="npm install" />-->
        <!--<Exec WorkingDirectory="$(SpaRoot)" Command="npm run build" />-->

        <!--[> Include the newly-built files in the publish output <]-->
        <!--<ItemGroup>-->
            <!--<DistFiles Include="$(SpaRoot)build\**" />-->
            <!--<ResolvedFileToPublish Include="@(DistFiles->'%(FullPath)')" Exclude="@(ResolvedFileToPublish)">-->
                <!--<RelativePath>wwwroot\%(RecursiveDir)%(FileName)%(Extension)</RelativePath>-->
                <!--<CopyToPublishDirectory>PreserveNewest</CopyToPublishDirectory>-->
                <!--<ExcludeFromSingleFile>true</ExcludeFromSingleFile>-->
            <!--</ResolvedFileToPublish>-->
        <!--</ItemGroup>-->
    <!--</Target>-->
</Project>
