// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MinitwitReact.Infrastructure.Context;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace MinitwitReact.Migrations
{
    [DbContext(typeof(MiniTwitContext))]
    partial class MiniTwitContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("MinitwitReact.Infrastructure.Entities.Follower", b =>
                {
                    b.Property<long?>("WhoId")
                        .HasColumnType("bigint");

                    b.Property<long?>("WhomId")
                        .HasColumnType("bigint");

                    b.HasKey("WhoId", "WhomId");

                    b.ToTable("Followers");
                });

            modelBuilder.Entity("MinitwitReact.Infrastructure.Entities.Message", b =>
                {
                    b.Property<long>("MessageId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("MessageId"));

                    b.Property<long>("AuthorId")
                        .HasColumnType("bigint");

                    b.Property<long?>("Flagged")
                        .HasColumnType("bigint");

                    b.Property<long>("PubDate")
                        .HasColumnType("bigint");

                    b.Property<string>("Text")
                        .HasColumnType("text");

                    b.HasKey("MessageId");

                    b.HasIndex("AuthorId");

                    b.HasIndex("PubDate");

                    b.ToTable("Messages");
                });

            modelBuilder.Entity("MinitwitReact.Infrastructure.Entities.User", b =>
                {
                    b.Property<long>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("UserId"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("PwHash")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("UserId");

                    b.HasIndex("UserId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("MinitwitReact.Infrastructure.Entities.Message", b =>
                {
                    b.HasOne("MinitwitReact.Infrastructure.Entities.User", "Author")
                        .WithMany()
                        .HasForeignKey("AuthorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Author");
                });
#pragma warning restore 612, 618
        }
    }
}
