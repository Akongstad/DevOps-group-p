version: "3.8"
services:

  letsencrypt:
    image: linuxserver/swag:version-1.23.0

    container_name: letsencrypt

    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Europe/Copenhagen
      - URL=minitwit.online
      - SUBDOMAINS=wildcard,
      - VALIDATION=dns
      - DNSPLUGIN=digitalocean
      - EMAIL=eythor108@gmail.com
      - DHLEVEL=4096

    volumes:
      - ./letsencrypt:/config
      - type: bind
        source: ./.local/.htpasswd
        target: /etc/nginx/.htpasswd

    restart: unless-stopped

    ports:
      - 80:80
      - 443:443

    networks:
      - main
      - elastic
      - proxy
    deploy:
      placement: 
        constraints:
          - node.role == manager

  frontend:

    image: virginity/minitwit_frontend:latest

    container_name: react_frontend

    ports:
      - 3000:3000

    command: serve -s build -l 3000

    depends_on:
      - backend

    restart: always

    networks:
      - main
    deploy:
      mode: replicated
      replicas: 2
      placement: 
        constraints:
          - node.role == worker
  
  db:
    container_name: postgres_database
    image: postgres:14.2
    ports:
      - 5432:5432
    restart: always
    environment:
      - POSTGRES_USER=sa
      - POSTGRES_PASSWORD_FILE=/run/secrets/db_password
      - POSTGRES_DB=Minitwit
    secrets:
      - db_password
    volumes:
      - /var/lib/docker/volume/data:/var/lib/postgresql/data
    networks:
      - main
    deploy:
      placement: 
        constraints:
          - node.role == manager


  prometheus:
    image: prom/prometheus:v2.33.5
    container_name: prometheus
    restart: always
    ports: 
      - 9090:9090
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    networks:
      - main
  
  grafana:
    image: grafana/grafana
    container_name: grafana
    restart: always
    ports:
      - 3001:3000
    volumes:
      - ./grafana/grafana.ini:/etc/grafana/grafana.ini
      - grafana_data:/var/lib/grafana
    networks:
      - main
      
  backend:

    image: virginity/minitwit_backend:latest
    container_name: dotnet_backend
    restart: always
    ports:
      - 5229:80

    environment:
      ConnectionStrings__Minitwit:
    depends_on:
      - db
      - prometheus
      - grafana
    secrets:
      - source: connection_string
        target: ConnectionStrings__Minitwit
      - source: jwt_key
        target: AppSettings__Secret
    restart: on-failure
    networks:
      - main
    deploy:
      mode: replicated
      replicas: 3
      placement: 
        constraints:
          - node.role == worker
  
  elasticsearch:
    image: "docker.elastic.co/elasticsearch/elasticsearch:7.17.1"
    container_name: elasticsearch
    environment:
      - "ES_JAVA_OPTS=-Xms512 -Xmx512m"
      - "discovery.type=single-node"
    volumes:
      - elk_elasticsearch_data:/usr/share/elasticsearch/data
    networks:
      - elastic
      - main
    deploy:
      resources:
        reservation:
        cpus: 0.25
        memory: 512M
    
  kibana:
    image: "docker.elastic.co/kibana/kibana:7.17.1"
    container_name: kibana
    ports:
      - 5601:5601
    environment:
      ELASTICSEARCH_HOSTS: '["http://elasticsearch:9200"]'
      SERVER_NAME: 'minitwit.online'
      SERVER_PUBLICBASEURL: 'https://minitwit.online/kibana'
      SERVER_BASEPATH: '/kibana'
    networks:
      - elastic
    deploy:
      resources:
        reservation:
        cpus: 0.25
        memory: 256M
  
  filebeat:
    image: "docker.elastic.co/beats/filebeat:7.17.1"
    container_name: filebeat
    environment:
      - "ELK_USER=${ELK_USER}"
    user: root
    volumes:
      - ${ELK_DIR}/filebeat.yml:/usr/share/filebeat/filebeat.yml:ro
      - /var/lib/docker:/var/lib/docker:ro
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - elastic
  
networks:

  main:
    name: minitwit-internal
  elastic:
  proxy:
    external: true
  
volumes:
  elk_elasticsearch_data:
  grafana_data:

    
secrets:
  db_password:
    file: .local/db_password.txt
  connection_string:
    file: .local/connection_string.txt
  jwt_key:
    file: .local/jwt_key.txt
