name: deploy

on:
#   release:
#     types: [published]
  pull_request:
    branches: [ main ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Setup .NET
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 6.0.x
    - name: Restore dependencies
      run: dotnet restore minitwit/backend
    - name: Build
      run: dotnet build minitwit/backend --no-restore
    - name: Test
      run: dotnet test minitwit/backend --no-build --verbosity normal

  deployment:
    name: Deploy
    runs-on: ubuntu-latest
    needs:
      - build

    steps:
        - uses: actions/checkout@v2
        - name: Docker login
          run: |
             echo "LOGIN"
             echo ${{ secrets.DOCKER_PASSWORD }} | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin
        
        - name: multiple command
          uses: appleboy/ssh-action@master
          with:
            host: ${{ secrets.MT_SERVER }}
            username: ${{ secrets.MT_USER }}
            key: ${{ secrets.SSH_KEY }}
            port: 22
            script: |
              cd /app/minitwit
              docker-compose -f compose.prod.yaml pull
              docker-compose -f compose.prod.yaml up -d
              echo "BIG CLAPS GG Friends"
              
        #- name: Docker Build and Push
         # run: |
          #   echo "BUILD"
           #  cd minitwit/frontend
            # docker build -t virginity/minitwit_frontend:latest . -f Dockerfile.dev
             #cd ../backend/MinitwitReact
             #docker build -t virginity/minitwit_backend:latest . -f Dockerfile.dev
             #cd ../../../
             #echo "PUSH"
             #docker push virginity/minitwit_frontend:latest
             #docker push virginity/minitwit_backend:latest
             
       # - name: Setup SSH
        #  run: |
         #    echo "$SSH_KEY" > /tmp/git_deploy_key
          #   chmod 600 /tmp/git_deploy_key
          #   echo 'echo ${SSH_PASSPHRASE}' > /tmp/askpass && chmod +x /tmp/askpass
          #   eval "$(ssh-agent -s)"
          #   DISPLAY=":0.0" SSH_ASKPASS="/tmp/askpass" setsid ssh-add /tmp/git_deploy_key </dev/null
 

         # env:
         #   SSH_USER: ${{ secrets.MT_USER }}
         #   SSH_KEY: ${{ secrets.SSH_KEY }}
         #   SSH_HOST: ${{ secrets.MT_SERVER }}
       # - name: Deploy to Digital Ocean
       #   run: |
       #      ssh -o "StrictHostKeyChecking no" "$SSH_USER"@"$SSH_HOST" \
        #     'source /root/.bash_profile && \
         #    cd /app/minitwit && \
         #    docker-compose pull && \
         #    docker-compose up -d'
 
