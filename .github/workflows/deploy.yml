name: deploy

on:
  release:
    types: [published]
    branches: [ main ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Setup .NET
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 6.0.x
    - name: Restore dependencies
      run: dotnet restore minitwit/backend
    - name: Build
      run: dotnet build minitwit/backend --no-restore
    - name: Test
      run: dotnet test minitwit/backend --no-build --verbosity normal

  deployment:
    name: Deploy
    runs-on: ubuntu-latest
    needs:
      - build

    steps:
        - uses: actions/checkout@v2
        - name: Docker login
          run: |
             echo "LOGIN"
             echo ${{ secrets.DOCKER_PASSWORD }} | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin
        - name: Docker Build and Push
          run: |
             echo "BUILD"
             cd minitwit/frontend
             docker build -t virginity/minitwit_frontend:latest . -f Dockerfile.dev
             cd ../backend/MinitwitReact
             docker build -t virginity/minitwit_backend:latest . -f Dockerfile.dev
             cd ../../../
             echo "PUSH"
             docker push virginity/minitwit_frontend:latest
             docker push virginity/minitwit_backend:latest
             
        - name: Setup SSH
          run: |
             echo "$SSH_KEY" > /tmp/git_deploy_key
             chmod 600 /tmp/git_deploy_key
             eval "$(ssh-agent -s)"
             DISPLAY=":0.0" setsid ssh-add /tmp/git_deploy_key </dev/null
             END
          env:
            SSH_USER: ${{ secrets.STAGING_SSH_USER }}
            SSH_KEY: ${{ secrets.STAGING_SSH_KEY }}
            SSH_HOST: ${{ secrets.STAGING_SSH_HOST }}
        - name: Deploy to Digital Ocean
          run: |
             ssh -o "StrictHostKeyChecking no" ${{ secrets.MT_USER }}@${{ secrets.MT_SERVER }} -i ${{ secrets.SSH_KEY }}
             "source /root/.bash_profile && \
             cd /app/minitwit && \
             docker-compose pull && \
             docker-compose up -d"
