name: release_schedule

on:
  workflow_dispatch:
  schedule:
  - cron: "0 20 * * 0"

jobs:
  #From: https://github.com/actions/create-release
  build:
    name: Create Release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Get current date
        id: date
        run: echo "::set-output name=date::$(date +'%Y-%m-%d')"
      - name: Get week num
        id: week
        run: |
          FIRST=$( echo $(date +%W) | awk '{ print substr( $0, 1, 1 ) }'); \
          if [[ "$FIRST" = "0" ]]; \
          then echo "::set-output name=week::$(echo $(( $( echo $(date +%W) | awk '{ print substr( $0, 2, 1 ) }')-4 )))"; \
          else echo "::set-output name=week::$(echo $(( $(date +%W)-4 )))"; fi
      - name: Generate Release Notes
        id: notes
        run: |
          NOTES_PATH=~/release_notes_v${{ steps.week.outputs.week }}.md; \
          touch $NOTES_PATH; \
          echo 'Automated weekly release with all **accepted changes to main**' > $NOTES_PATH; \
          LAST_WEEK=$(( ${{ steps.week.outputs.week }} - 1 )); \
          LAST_MAJOR_VERSION=v$LAST_WEEK.0; \
          echo "What's changed" >> $NOTES_PATH; \
          echo "---" >> $NOTES_PATH; \
          git log --pretty="- %h - %s (%an)" $LAST_MAJOR_VERSION..HEAD >> $NOTES_PATH; \
          echo "::set-output name=notes::$(echo $NOTES_PATH)"
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
        with:
          tag_name: v${{ steps.week.outputs.week }}.0
          release_name: "Weekly Release: ${{ steps.date.outputs.date }}"
          body_path: ${{ steps.notes.outputs.notes }}
          draft: false
          prerelease: false
